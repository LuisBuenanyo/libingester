#!/usr/bin/env node
'use strict'

const electron = require('electron');
const path = require('path');
const proc = require('child_process');


const allArgs = process.argv;
const passedArgs = allArgs.slice(2);

// Assume first that we're within libingester
// then try to load us as a module if we're imported
let pathToLibingesterModule = __dirname + '/../..'
try {
    pathToLibingesterModule = path.dirname(require.resolve('libingester'));
} catch(e) {
  // Ignore - we're not in a dependent module
}

// Convert potentially relative path of hatch dir to absolute
// since we will be changing the working dir
passedArgs[0] = path.resolve(passedArgs[0]);

console.log(passedArgs);

console.log(`Using path: ${pathToLibingesterModule}`);

// Start app
var child = proc.spawn(electron,
                       ['.', ...passedArgs],
                       { cwd:`${pathToLibingesterModule}/previewer`,
                         detached: true,
                         stdio: "inherit" });
child.on('close', (code) => {
    process.exit(code);
});
